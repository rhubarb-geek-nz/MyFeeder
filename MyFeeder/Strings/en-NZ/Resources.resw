<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppBarButtonAdd.Label" xml:space="preserve">
    <value>credit</value>
  </data>
  <data name="AppBarButtonHelp.Label" xml:space="preserve">
    <value>help</value>
  </data>
  <data name="AppBarButtonDownload.Label" xml:space="preserve">
    <value>download</value>
  </data>
  <data name="AppBarButtonRefresh.Label" xml:space="preserve">
    <value>refresh</value>
  </data>
  <data name="BlankCardPAN" xml:space="preserve">
    <value>blank</value>
  </data>
  <data name="CardNotFound" xml:space="preserve">
    <value>Card not found</value>
  </data>
  <data name="CreditComplete1" xml:space="preserve">
    <value>Credit of $</value>
  </data>
  <data name="CreditComplete2" xml:space="preserve">
    <value> complete.</value>
  </data>
  <data name="Header.Text" xml:space="preserve">
    <value>MYFEEDER</value>
  </data>
  <data name="HelpLiabilityContents.Text" xml:space="preserve">
    <value>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</value>
  </data>
  <data name="HelpLiabilityTitle.Text" xml:space="preserve">
    <value>Limitation of Liability</value>
  </data>
  <data name="HelpRequirementsContentsMobile.Text" xml:space="preserve">
    <value>This application needs a Windows 10 device that supports NFC. It can use the Snapper payment application issued on the SIM. It can read contactless cards on the Nokia Lumia 735 and 830. This project uses a Nokia Lumia 735 with a 2degrees Touch2Pay SIM as reference. </value>
  </data>
  <data name="HelpRequirementsTitle.Text" xml:space="preserve">
    <value>Requirements</value>
  </data>
  <data name="HelpSecurityContents.Text" xml:space="preserve">
    <value>This client device is considered untrusted. No cryptographic authentication is performed against EMV cards. All network communications use publicly available web services over HTTPS.</value>
  </data>
  <data name="HelpSecurityTitle.Text" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="HelpWarrantyContents.Text" xml:space="preserve">
    <value>BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM 'AS IS' WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</value>
  </data>
  <data name="HelpWarrantyTitle.Text" xml:space="preserve">
    <value>Disclaimer of Warranty</value>
  </data>
  <data name="IssuerSnapper" xml:space="preserve">
    <value>Snapper</value>
  </data>
  <data name="IssuingPanel.Text" xml:space="preserve">
    <value>Please wait, do not interrupt…</value>
  </data>
  <data name="NavigationFailedExceptionMessage" xml:space="preserve">
    <value>Navigation failed.</value>
  </data>
  <data name="NFCReader" xml:space="preserve">
    <value>reader</value>
  </data>
  <data name="PendingReloadPrompt" xml:space="preserve">
    <value>Synchronising…</value>
  </data>
  <data name="Pivot.Title" xml:space="preserve">
    <value>MYFEEDER</value>
  </data>
  <data name="PivotItemAdd.Header" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="PivotItemHelp.Header" xml:space="preserve">
    <value>help</value>
  </data>
  <data name="PivotItemProducts.Header" xml:space="preserve">
    <value>products</value>
  </data>
  <data name="PivotItemReload.Header" xml:space="preserve">
    <value>credit</value>
  </data>
  <data name="PivotItemSettings.Header" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="PivotItemSummary.Header" xml:space="preserve">
    <value>summary</value>
  </data>
  <data name="PivotItemTransactions.Header" xml:space="preserve">
    <value>transactions</value>
  </data>
  <data name="ReaderState.Text" xml:space="preserve">
    <value>state</value>
  </data>
  <data name="ReaderTitleSIM" xml:space="preserve">
    <value>sim</value>
  </data>
  <data name="NotFoundValue.Text" xml:space="preserve">
    <value>Snapper not found</value>
  </data>
  <data name="ReaderURI.Text" xml:space="preserve">
    <value>URI</value>
  </data>
  <data name="TopupCVV.PlaceholderText" xml:space="preserve">
    <value>CVV</value>
  </data>
  <data name="TopupMM.PlaceholderText" xml:space="preserve">
    <value>MM</value>
  </data>
  <data name="TopupCardNumber.PlaceholderText" xml:space="preserve">
    <value>Credit Card Number</value>
  </data>
  <data name="TopupYY.PlaceholderText" xml:space="preserve">
    <value>YY</value>
  </data>
  <data name="ReaderTitleInit" xml:space="preserve">
    <value>initialising…</value>
  </data>
  <data name="SAPReader" xml:space="preserve">
    <value>bluetooth</value>
  </data>
  <data name="IssuerUnknown" xml:space="preserve">
    <value>unknown</value>
  </data>
  <data name="HelpPrivacyContents.Text" xml:space="preserve">
    <value>You are treated anonymously. No personal data are used or stored by the application on any of the local system, remote system or cloud storage. Only the data required to perform the transactions are transmitted to Snapper Services Ltd and its associates' web services using HTTPS. Only the Track 2 Equivalent Data from EMV cards are used by the application. Credit card transactions are treated as 'card not present'. Microsoft Pay is used with the 'basic-card' method.</value>
  </data>
  <data name="HelpPrivacyTitle.Text" xml:space="preserve">
    <value>Privacy</value>
  </data>
  <data name="IssuerTmoney" xml:space="preserve">
    <value>T-money</value>
  </data>
  <data name="HelpDriverContents.Text" xml:space="preserve">
    <value>The Snapper Feeder appears as a device of type "USB TAMA". It needs to be configured to use the generic Microsoft "WinUsb Device" driver and have "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Enum\USB\VID_04CC&amp;PID_0531\…\Device Parameters\DeviceInterfaceGUID" set to "{ec55ee47-5758-4378-926b-68ed0aec8170}". For detailed driver installation instructions go to the "MyFeeder" App Store page and follow the support link.</value>
  </data>
  <data name="HelpDriverTitle.Text" xml:space="preserve">
    <value>Snapper Feeder Driver</value>
  </data>
  <data name="HelpRequirementsContents.Text" xml:space="preserve">
    <value>This application needs a Windows 10 or above device with a supported smartcard reader. This project uses a Surface Pro with a Snapper Feeder as reference.</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>MYFEEDER</value>
  </data>
  <data name="ReaderDevice.Text" xml:space="preserve">
    <value>device</value>
  </data>
  <data name="AppBarButtonAccept.Label" xml:space="preserve">
    <value>ok</value>
  </data>
  <data name="PivotItemIssue.Header" xml:space="preserve">
    <value>download</value>
  </data>
  <data name="TopupAmount.Text" xml:space="preserve">
    <value>amount</value>
  </data>
  <data name="TopupExpiry.Text" xml:space="preserve">
    <value>expiry</value>
  </data>
  <data name="TopupPAN.Text" xml:space="preserve">
    <value>PAN</value>
  </data>
  <data name="TopupSecurity.Text" xml:space="preserve">
    <value>security</value>
  </data>
  <data name="ReaderBalance.Text" xml:space="preserve">
    <value>balance</value>
  </data>
  <data name="ReaderExpiry.Text" xml:space="preserve">
    <value>expiry</value>
  </data>
  <data name="ReaderIssuer.Text" xml:space="preserve">
    <value>issuer</value>
  </data>
  <data name="ReaderPAN.Text" xml:space="preserve">
    <value>PAN</value>
  </data>
  <data name="AnErrorOccurredDuringCredit" xml:space="preserve">
    <value>An error occurred during credit.</value>
  </data>
  <data name="AnErrorOccurredDuringPayment" xml:space="preserve">
    <value>An error occurred during payment.</value>
  </data>
  <data name="AnErrorOccurredDuringPendingCredit" xml:space="preserve">
    <value>An error occurred during pending credit.</value>
  </data>
  <data name="AnUnexpectedErrorOccurredDuringCredit" xml:space="preserve">
    <value>An unexpected error occurred during credit.</value>
  </data>
  <data name="CreditComplete" xml:space="preserve">
    <value>Credit complete.</value>
  </data>
  <data name="PerformingCredit" xml:space="preserve">
    <value>Performing credit…</value>
  </data>
  <data name="PerformingPayment" xml:space="preserve">
    <value>Performing payment…</value>
  </data>
  <data name="PreparingForCredit" xml:space="preserve">
    <value>Preparing for credit…</value>
  </data>
  <data name="PresentSnapper" xml:space="preserve">
    <value>Present Snapper </value>
  </data>
  <data name="ProvidePaymentDetails" xml:space="preserve">
    <value>Provide payment details.</value>
  </data>
  <data name="AppBarButtonPay.Label" xml:space="preserve">
    <value>pay</value>
  </data>
  <data name="PaymentCancelled" xml:space="preserve">
    <value>Payment Cancelled</value>
  </data>
  <data name="PaymentError" xml:space="preserve">
    <value>Payment Error</value>
  </data>
  <data name="PaymentTotal" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="AppBarButtonEdit.Label" xml:space="preserve">
    <value>edit</value>
  </data>
</root>